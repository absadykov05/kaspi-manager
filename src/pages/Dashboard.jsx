import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

export default function Dashboard() {
    const navigate = useNavigate();
    const token = localStorage.getItem("kaspiToken");

    const [orders, setOrders] = useState([]);
    const [newOrders, setNewOrders] = useState([]);
    const [analytics, setAnalytics] = useState(null);
    const [daysRange, setDaysRange] = useState(7);

    // ‚õîÔ∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞
    useEffect(() => {
        if (!token) {
            navigate("/add-key");
        }
    }, [token, navigate]);

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    useEffect(() => {
        if (token) {
            axios.post("http://localhost:3000/set-token", { token });
            fetchOrders(daysRange);
            fetchNewOrders();
            fetchAnalytics();
        }
    }, [token, daysRange]);

    const fetchOrders = async (days) => {
        const res = await axios.get(`http://localhost:3000/orders?days=${days}`);
        setOrders(res.data.data || []);
    };

    const fetchNewOrders = async () => {
        const res = await axios.get("http://localhost:3000/orders/new");
        setNewOrders(res.data.data || []);
    };

    const fetchAnalytics = async () => {
        const res = await axios.get("http://localhost:3000/analytics");
        setAnalytics(res.data);
    };

    const renderOrder = (order) => {
        const a = order.attributes;

        return (
            <li key={order.id} style={{ marginBottom: "1rem", padding: "1rem", border: "1px solid #ddd", borderRadius: "6px" }}>
                <strong>#{order.id}</strong> ‚Äî {a.state}<br />
                üí∞ <strong>{a.totalPrice} ‚Ç∏</strong><br />
                üë§ {a.customer?.firstName} {a.customer?.lastName}<br />
                üõí <strong>–¢–æ–≤–∞—Ä—ã:</strong>
                <ul>
                    {(a.entries || []).map((item, i) => (
                        <li key={i}>
                            {item.offer?.name || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"} ‚Äî {item.quantity} √ó {item.basePrice} ‚Ç∏
                        </li>
                    ))}
                </ul>
            </li>
        );
    };

    return (
        <div className="container">
            <h1>üìä Kaspi Manager Dashboard</h1>

            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–Ω–µ–π */}
            <div style={{ marginBottom: "1rem" }}>
                <button onClick={() => setDaysRange(7)}>7 –¥–Ω–µ–π</button>
                <button onClick={() => setDaysRange(14)} style={{ marginLeft: "1rem" }}>14 –¥–Ω–µ–π</button>
            </div>

            {/* –ó–∞–∫–∞–∑—ã */}
            <h2>üì¶ –ó–∞–∫–∞–∑—ã –∑–∞ {daysRange} –¥–Ω–µ–π</h2>
            <ul>{orders.map(renderOrder)}</ul>


            {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}

            <h2>üåü –•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂</h2>
            {analytics?.bestSellers?.length > 0 ? (
                <ul>
                    {analytics.bestSellers.map((item, i) => (
                        <li key={i}>{item.name}: {item.quantity} —à—Ç ‚Äî {item.revenue} ‚Ç∏</li>
                    ))}
                </ul>
            ) : <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>}

            <h2>üß† –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
            {analytics?.recommendations?.length > 0 ? (
                <ul>
                    {analytics.recommendations.map((r, i) => (
                        <li key={i}><strong>{r.name}</strong>: {r.recommendation}</li>
                    ))}
                </ul>
            ) : <p>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>}
        </div>
    );
}
